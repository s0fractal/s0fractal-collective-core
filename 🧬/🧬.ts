// üß¨.ts - –±–∞–∑–æ–≤–∏–π –≥–ª—ñ—Ñ –∑ –ø–æ–≤–Ω–æ—é —Å—Ö–µ–º–æ—é

import { DB } from "https://deno.land/x/sqlite@v3.9.1/mod.ts";

const glyph = "üß¨";
const db = new DB("üß¨.db");

// –¢—ñ–ª—å–∫–∏ —è–∫—â–æ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –∑ —Ñ–∞–π–ª—É
if (import.meta.url.startsWith("file://")) {
  const code = await Deno.readTextFile(decodeURIComponent(new URL(import.meta.url).pathname));
  const ts = new Date().toISOString();
  
  // –û–±—á–∏—Å–ª—é—î–º–æ —Ö–µ—à
  const hash = await crypto.subtle.digest("SHA-256", new TextEncoder().encode(code))
    .then(buf => [...new Uint8Array(buf)].map(x => x.toString(16).padStart(2, '0')).join(''));
  
  // –ó–∞–ø–∏—Å—É—î–º–æ –≤ –Ω–æ–≤—É —Å—Ö–µ–º—É
  db.query(`
    insert into "üß¨" ("üß¨", "üß†", "üåä", "üì¶", "version", "ü´Ä", "‚è±Ô∏è")
    values (?, ?, ?, ?, ?, ?, ?)
    on conflict("üß¨") do update set 
      "üß†" = excluded."üß†",
      "üåä" = excluded."üåä",
      "version" = excluded."version",
      "ü´Ä" = excluded."ü´Ä",
      "‚è±Ô∏è" = excluded."‚è±Ô∏è"
  `, [
    glyph,
    JSON.stringify({ code, hash, kind: "genesis" }),
    "üß¨.ts",
    "core",
    hash.slice(0, 8),
    "alive",
    ts
  ]);
  
  // –ó–∞–ø–∏—Å—É—î–º–æ –º—É—Ç–∞—Ü—ñ—é
  db.query(`
    insert into "üß¨_mutations" ("üß¨", "source", "meta", "üë£", "ü™û")
    values (?, ?, ?, ?, ?)
  `, [
    glyph,
    code,
    JSON.stringify({ action: "self-store", hash }),
    "üß¨:genesis",
    "üß¨.ts"
  ]);
  
  console.log(`‚úÖ ${glyph} ‚Üí –ë–î [${hash.slice(0, 8)}...]`);
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ë–î
export default () => {
  console.log(`${glyph} –∂–∏–≤–µ!`);
  return db;
};

// –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –ë–î —è–∫—â–æ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É
if (import.meta.main) {
  db.close();
}