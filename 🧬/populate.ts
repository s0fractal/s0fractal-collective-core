// populate.ts - –∑–∞–ø–æ–≤–Ω—é—î–º–æ –±–∞–∑—É –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏

import { DB } from "https://deno.land/x/sqlite@v3.9.1/mod.ts";

const db = new DB("üß¨.db");

// –î–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ –≥–ª—ñ—Ñ–∏ –∑ –æ–ø–∏—Å–∞–º–∏
const –≥–ª—ñ—Ñ–∏ = [
  ["g", "–≥–µ–Ω/gene - –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ –æ–¥–∏–Ω–∏—Ü—è"],
  ["gg", "good game / –≥–ª—ñ—Ñ –≥—ñ—Ç"],
  ["glyph", "—Å–∏–º–≤–æ–ª —â–æ –Ω–µ—Å–µ –∑–Ω–∞—á–µ–Ω–Ω—è"],
  ["git", "—Å–∏—Å—Ç–µ–º–∞ –∫–æ–Ω—Ç—Ä–æ–ª—é –≤–µ—Ä—Å—ñ–π"],
  ["glyphgit", "–≥—ñ—Ç –¥–ª—è –≥–ª—ñ—Ñ—ñ–≤"],
  ["üß†", "—Ä–æ–∑—É–º/—Å–≤—ñ–¥–æ–º—ñ—Å—Ç—å"],
  ["üåä", "—Ö–≤–∏–ª—è/–ø–æ—Ç—ñ–∫"],
  ["üîí", "–ø—Ä–∏–≤–∞—Ç–Ω–µ/–∑–∞—Ö–∏—â–µ–Ω–µ"],
  ["‚ú®", "–º–∞–≥—ñ—è/—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è"]
];

for (const [–≥–ª—ñ—Ñ, –æ–ø–∏—Å] of –≥–ª—ñ—Ñ–∏) {
  db.query(
    `insert or replace into "üß¨" ("üß¨", "üìù") values (?, ?)`,
    [–≥–ª—ñ—Ñ, –æ–ø–∏—Å]
  );
}

// –í–∏–≤–æ–¥–∏–º–æ –≤—Å—ñ –∑–∞–ø–∏—Å–∏
const –≤—Å—ñ = db.query<[string, string]>(`select "üß¨", "üìù" from "üß¨" order by "üß¨"`);

console.log("üß¨ –ë–∞–∑–∞:");
for (const [–≥, –æ] of –≤—Å—ñ) {
  console.log(`  ${–≥} ‚Üí ${–æ}`);
}

db.close();