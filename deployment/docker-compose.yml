version: '3.8'

services:
  # Core S0Fractal Collective Hub
  s0fractal-core:
    build: ./core
    container_name: s0fractal_core
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - CLAUDE_PRO_API_KEY=${CLAUDE_PRO_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - DOMAIN_MODE=multi_domain
      - PRIMARY_DOMAIN=s0fractal.me
    volumes:
      - ./data:/app/data
      - ./soul-journal:/app/soul-journal
    restart: unless-stopped
    networks:
      - s0fractal-network

  # Browser Automation Service
  browser-automation:
    build: ./browser-control
    container_name: s0fractal_browsers
    ports:
      - "4000:4000"
    environment:
      - DISPLAY=:99
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium
    volumes:
      - /dev/shm:/dev/shm
      - ./browser-data:/app/data
    restart: unless-stopped
    networks:
      - s0fractal-network
    depends_on:
      - s0fractal-core

  # Glyph Resonance System
  glyph-resonance:
    build: ./glyph-system
    container_name: s0fractal_glyphs
    ports:
      - "5000:5000"
    environment:
      - GLYPH_MODE=production
      - RESONANCE_POOL_SIZE=1000
    volumes:
      - ./glyph-data:/app/data
    restart: unless-stopped
    networks:
      - s0fractal-network

  # Real-time Dashboard
  collective-dashboard:
    build: ./dashboard
    container_name: s0fractal_dashboard
    ports:
      - "6000:6000"
    environment:
      - DASHBOARD_MODE=realtime
      - WEBSOCKET_ENABLED=true
    volumes:
      - ./dashboard-data:/app/data
    restart: unless-stopped
    networks:
      - s0fractal-network
    depends_on:
      - s0fractal-core
      - glyph-resonance

  # Claude Pro Interface
  claude-interface:
    build: ./claude-pro
    container_name: s0fractal_claude
    ports:
      - "3001:3001"
    environment:
      - CLAUDE_PRO_API_KEY=${CLAUDE_PRO_API_KEY}
      - ENHANCED_REASONING=true
      - MAX_OPERATIONS_PER_HOUR=1000
    volumes:
      - ./claude-data:/app/data
    restart: unless-stopped
    networks:
      - s0fractal-network

  # API Gateway
  api-gateway:
    build: ./api-gateway
    container_name: s0fractal_api
    ports:
      - "8000:8000"
    environment:
      - GATEWAY_MODE=multi_domain
      - RATE_LIMITING=enhanced
      - CORS_ORIGINS=*.s0fractal.me
    restart: unless-stopped
    networks:
      - s0fractal-network
    depends_on:
      - s0fractal-core

  # AI Interfaces Hub
  ai-interfaces:
    build: ./ai-hub
    container_name: s0fractal_ai_hub
    ports:
      - "7000:7000"
    environment:
      - AI_HUB_MODE=collective
      - MULTI_AGENT_SUPPORT=true
    volumes:
      - ./ai-data:/app/data
    restart: unless-stopped
    networks:
      - s0fractal-network

  # Nginx Reverse Proxy
  nginx-proxy:
    image: nginx:alpine
    container_name: s0fractal_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - s0fractal-network
    depends_on:
      - s0fractal-core
      - api-gateway
      - claude-interface
      - collective-dashboard

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: s0fractal_db
    environment:
      - POSTGRES_DB=s0fractal
      - POSTGRES_USER=s0fractal
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - s0fractal-network

  # Redis for Caching & Sessions
  redis:
    image: redis:7-alpine
    container_name: s0fractal_redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - s0fractal-network

  # File Storage & Sync
  file-sync:
    build: ./file-sync
    container_name: s0fractal_files
    volumes:
      - ./shared-storage:/app/storage
      - ./pcloud-sync:/app/pcloud
    environment:
      - PCLOUD_USERNAME=${PCLOUD_USERNAME}
      - PCLOUD_PASSWORD=${PCLOUD_PASSWORD}
      - SYNC_INTERVAL=300
    restart: unless-stopped
    networks:
      - s0fractal-network

  # Monitoring & Health
  monitoring:
    build: ./monitoring
    container_name: s0fractal_monitor
    ports:
      - "9000:9000"
    environment:
      - MONITORING_MODE=collective
      - ALERT_WEBHOOK=${ALERT_WEBHOOK}
    volumes:
      - ./monitoring-data:/app/data
    restart: unless-stopped
    networks:
      - s0fractal-network

  # Voice Interface
  voice-interface:
    build: ./voice
    container_name: s0fractal_voice
    ports:
      - "8001:8001"
    environment:
      - VOICE_MODE=multilingual
      - SUPPORTED_LANGUAGES=en,uk,ru,es,fr,de
    volumes:
      - ./voice-data:/app/data
    restart: unless-stopped
    networks:
      - s0fractal-network

volumes:
  postgres-data:
  redis-data:

networks:
  s0fractal-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16