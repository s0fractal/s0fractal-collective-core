// scripts/build.ts
import { copy } from "https://deno.land/std@0.224.0/fs/copy.ts";
import { emptyDir, ensureDir } from "https://deno.land/std@0.224.0/fs/mod.ts";
import { exists } from "https://deno.land/std@0.224.0/fs/exists.ts";
import { basename, join } from "https://deno.land/std@0.224.0/path/mod.ts";

const ROOT = new URL("..", import.meta.url).pathname;
const DIST = join(ROOT, "dist");
const INCLUDE = [
    "f",
    "docs",
    "media",
    "s0fractal",
    "soul-journal",
    "README.md",
];

// –û—á–∏—Å—Ç–∫–∞ dist/
console.log("üßπ –û—á–∏—â–∞—é dist/...");
await emptyDir(DIST);

// –ö–æ–ø—ñ—é–≤–∞–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
for (const item of INCLUDE) {
    const source = join(ROOT, item);
    const dest = join(DIST, basename(item));
    if (await exists(source)) {
        console.log(`üìÅ –ö–æ–ø—ñ—é—é ${item} ‚Üí dist/${basename(item)}`);
        await copy(source, dest, { overwrite: true });
    } else {
        console.warn(`‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ ${item} ‚Äî –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
    }
}

console.log("‚úÖ –ü—É–±–ª—ñ—á–Ω–∏–π –±—ñ–ª–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.");
