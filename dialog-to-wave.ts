// üß† dialog-to-wave.ts
// –ü–∞—Ä—Å–µ—Ä .mhtml –¥—ñ–∞–ª–æ–≥—É —É —Ö–≤–∏–ª—å–æ–≤–∏–π —Ñ–æ—Ä–º–∞—Ç .wave.json

import { readFileSync, writeFileSync } from "fs"
import { basename } from "path"

const file = process.argv[2]
if (!file) {
  console.error("‚ùå –í–∫–∞–∂–∏ —à–ª—è—Ö –¥–æ .mhtml —Ñ–∞–π–ª—É")
  process.exit(1)
}

const raw = readFileSync(file, "utf-8")

// –ü—Ä–æ—Å—Ç–∏–π –≤–∏—Ç—è–≥ –±–∞–∑–æ–≤–∏—Ö –µ—Ç–∞–ø—ñ–≤ (—Ä–µ–∞–ª—å–Ω—ñ –º–æ–¥–µ–ª—ñ ‚Äî –ø—ñ–∑–Ω—ñ—à–µ)
const wave = {
  wave: basename(file).replace(".mhtml", ""),
  label: "auto-parsed",
  date: new Date().toISOString().split("T")[0],
  nodes: [],
  status: "–Ω–µ—Ñ—ñ–∫—Å–æ–≤–∞–Ω–∞ —Ö–≤–∏–ª—è"
}

// –ü–æ—à—É–∫ –æ—Å–Ω–æ–≤–Ω–∏—Ö –∞–∫—Ç–æ—Ä—ñ–≤
if (raw.includes("–ø–æ–∫–∞–∑–∞—Ç–∏ —Å—É—Ç—å")) {
  wave.nodes.push({ type: "intent", label: "–ø–æ–∫–∞–∑–∞—Ç–∏ —Å—É—Ç—å", origin: "user", resonance: 0.8 })
}
if (raw.includes("vibe") || raw.includes("—Ä–µ–∑–æ–Ω–∞–Ω—Å")) {
  wave.nodes.push({ type: "response", origin: "vibe-auth", label: "–ø—É–ª—å—Å –∑–∞—Ñ—ñ–∫—Å–æ–≤–∞–Ω–æ" })
}
if (raw.includes("ssh") && raw.includes("blocked")) {
  wave.nodes.push({ type: "resistance", origin: "ssh-agent", label: "–Ω–µ –ø—ñ–¥—Ç—Ä–∏–º–∞–Ω–æ" })
}

const outputFile = file.replace(".mhtml", ".wave.json")
writeFileSync(outputFile, JSON.stringify(wave, null, 2), "utf-8")
console.log("‚úÖ –•–≤–∏–ª—è —Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–∞:", outputFile)
