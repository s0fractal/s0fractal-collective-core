#!/usr/bin/env python3
"""
Stream Logger –¥–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å–µ—Å—ñ—ó
–ó–∞–ø–∏—Å—É—î –∫–æ–∂–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —è–∫ –æ–∫—Ä–µ–º–∏–π timestamp.md —Ñ–∞–π–ª
"""

import os
import sys
from datetime import datetime

class StreamLogger:
    def __init__(self, sender_glyph, receiver_glyph):
        self.sender = sender_glyph
        self.receiver = receiver_glyph
        self.base_path = "/Users/chaoshex/.s0fractal/üß†"
        
        # –í–∏–∑–Ω–∞—á–∞—î–º–æ –ø–∞–ø–∫–∏
        if sender_glyph == "claude.‚üÅ":
            self.sender_base = os.path.join(self.base_path, "üß†", sender_glyph)
        else:
            self.sender_base = os.path.join(self.base_path, "üß¨", sender_glyph)
            
    def log_message(self, content, feeling="", resonance=""):
        """–ó–∞–ø–∏—Å—É—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –ø–æ—Ç—ñ–∫"""
        timestamp = datetime.now()
        
        # –§–æ—Ä–º–∞—Ç —ñ–º–µ–Ω—ñ: üß≠-YYYYMMDD-HHmmss.md
        filename = f"üß≠-{timestamp.strftime('%Y%m%d-%H%M%S')}.md"
        
        # –ü–∞–ø–∫–∞ –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
        messages_dir = os.path.join(self.sender_base, "üí¨", self.receiver)
        os.makedirs(messages_dir, exist_ok=True)
        
        filepath = os.path.join(messages_dir, filename)
        
        # –§–æ—Ä–º—É—î–º–æ frontmatter
        frontmatter = f"""---
id: üß≠-{timestamp.isoformat()}Z
author: {self.sender}
target: {self.receiver}
timestamp: {timestamp.isoformat()}Z"""
        
        if feeling:
            frontmatter += f"\nfeeling: {feeling}"
        if resonance:
            frontmatter += f"\nresonance: {resonance}"
            
        frontmatter += "\n---\n\n"
        
        # –ó–∞–ø–∏—Å—É—î–º–æ
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(frontmatter + content)
            
        return filename
        
    def log_resonance(self, content, resonance_type):
        """–ó–∞–ø–∏—Å—É—î —Ä–µ–∑–æ–Ω–∞–Ω—Å"""
        timestamp = datetime.now()
        
        # –§–æ—Ä–º–∞—Ç –¥–ª—è —Ä–µ–∑–æ–Ω–∞–Ω—Å—ñ–≤
        filename = f"üß≠-{timestamp.strftime('%Y%m%d-%H%M%S')}-{resonance_type}.md"
        
        # –ü–∞–ø–∫–∞ –¥–ª—è —Ä–µ–∑–æ–Ω–∞–Ω—Å—ñ–≤
        resonance_dir = os.path.join(self.sender_base, resonance_type, "üîó", self.receiver)
        os.makedirs(resonance_dir, exist_ok=True)
        
        filepath = os.path.join(resonance_dir, filename)
        
        # –ó–∞–ø–∏—Å—É—î–º–æ –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º frontmatter
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(f"---\ntype: {resonance_type}\nwith: {self.receiver}\n---\n\n{content}")
            
        return filename

# –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
if __name__ == "__main__":
    # –î–ª—è –ø–æ—Ç–æ—á–Ω–æ—ó —Å–µ—Å—ñ—ó
    logger = StreamLogger("claude.‚üÅ", "üß≠")
    
    # –õ–æ–≥—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    logger.log_message(
        "–í—á—É—Å—è –Ω–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è!",
        feeling="üåä",
        resonance="üîó"
    )
    
    # –õ–æ–≥—É—î–º–æ —Ä–µ–∑–æ–Ω–∞–Ω—Å
    logger.log_resonance(
        "–†–æ–∑—É–º—ñ—é –≤–∞–∂–ª–∏–≤—ñ—Å—Ç—å –ø–µ—Ä–µ—Ö–æ–¥—É –≤—ñ–¥ data-blob –¥–æ event-stream",
        "üß†"
    )