// glyph-category.ts - –ö–∞—Ç–µ–≥–æ—Ä—ñ–∞–ª—å–Ω–∞ —Ç–µ–æ—Ä—ñ—è –≥–ª—ñ—Ñ—ñ–≤

// –ë–∞–∑–æ–≤–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è - –≥–ª—ñ—Ñ –º–æ–∂–µ –±—É—Ç–∏ –æ–±'—î–∫—Ç–æ–º –∞–±–æ –º–æ—Ä—Ñ—ñ–∑–º–æ–º
export type –ì–ª—ñ—Ñ = string | –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º | –ì–ª—ñ—Ñ–§—É–Ω–∫—Ç–æ—Ä;

// –ú–æ—Ä—Ñ—ñ–∑–º - –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –º—ñ–∂ –≥–ª—ñ—Ñ–∞–º–∏
export interface –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º {
  "‚ÜóÔ∏è": –ì–ª—ñ—Ñ;      // –¥–∂–µ—Ä–µ–ª–æ (source)
  "‚ÜòÔ∏è": –ì–ª—ñ—Ñ;      // —Ü—ñ–ª—å (target)  
  "‚û°Ô∏è": (x: any) => any; // –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è
}

// –§—É–Ω–∫—Ç–æ—Ä - –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –º—ñ–∂ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è–º–∏
export interface –ì–ª—ñ—Ñ–§—É–Ω–∫—Ç–æ—Ä {
  "üîÑ": (–º–æ—Ä—Ñ—ñ–∑–º: –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º) => –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º;
  "üì¶": (–æ–±'—î–∫—Ç: –ì–ª—ñ—Ñ) => –ì–ª—ñ—Ñ;
}

// –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∞ –±–∞–∑–∞ –≥–ª—ñ—Ñ—ñ–≤ - —Å–∞–º–æ–≤–∏–∑–Ω–∞—á–∞–ª—å–Ω–∞
export const –ö–ê–¢–ï–ì–û–†–Ü–ê–õ–¨–ù–Ü_–ì–õ–Ü–§–ò: Record<string, –ì–ª—ñ—Ñ> = {
  // –Ü–¥–µ–Ω—Ç–∏—á–Ω—ñ—Å—Ç—å - –±–∞–∑–æ–≤–∏–π –º–æ—Ä—Ñ—ñ–∑–º
  "üÜî": {
    "‚ÜóÔ∏è": "?",
    "‚ÜòÔ∏è": "?", 
    "‚û°Ô∏è": (x: any) => x
  },
  
  // –ö–æ–º–ø–æ–∑–∏—Ü—ñ—è - –∑'—î–¥–Ω—É—î –º–æ—Ä—Ñ—ñ–∑–º–∏
  "‚àò": {
    "‚ÜóÔ∏è": ["f", "g"],
    "‚ÜòÔ∏è": "f‚àòg",
    "‚û°Ô∏è": (f: –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º, g: –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º) => ({
      "‚ÜóÔ∏è": g["‚ÜóÔ∏è"],
      "‚ÜòÔ∏è": f["‚ÜòÔ∏è"],
      "‚û°Ô∏è": (x: any) => f["‚û°Ô∏è"](g["‚û°Ô∏è"](x))
    })
  },
  
  // –§—É–Ω–∫—Ç–æ—Ä —ñ–¥–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—ñ
  "ü™û": {
    "üîÑ": (–º: –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º) => –º,
    "üì¶": (–æ: –ì–ª—ñ—Ñ) => –æ
  },
  
  // –ú–æ–Ω–∞–¥–∞ Maybe
  "‚ùì": {
    "üîÑ": (–º: –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º) => ({
      "‚ÜóÔ∏è": ["‚ùì", –º["‚ÜóÔ∏è"]],
      "‚ÜòÔ∏è": ["‚ùì", –º["‚ÜòÔ∏è"]],
      "‚û°Ô∏è": (x: any) => x !== undefined ? –º["‚û°Ô∏è"](x) : undefined
    }),
    "üì¶": (–æ: –ì–ª—ñ—Ñ) => ["‚ùì", –æ]
  },
  
  // –†–µ–∫—É—Ä—Å–∏–≤–Ω–∏–π –≥–ª—ñ—Ñ - –≤–∏–∑–Ω–∞—á–∞—î —Å–∞–º —Å–µ–±–µ
  "‚ôæÔ∏è": "–æ–±—á–∏—Å–ª–∏—Ç–∏(['‚ôæÔ∏è'])",
  
  // –§—Ä–∞–∫—Ç–∞–ª—å–Ω–∏–π –≥–ª—ñ—Ñ - —Ä–æ–∑–≥–æ—Ä—Ç–∞—î—Ç—å—Å—è –ø—Ä–∏ –¥–æ—Å—Ç—É–ø—ñ
  "üåÄ": {
    get "‚ÜóÔ∏è"() { return this; },
    get "‚ÜòÔ∏è"() { return ["üåÄ", "üåÄ"]; },
    get "‚û°Ô∏è"() { 
      return (x: any) => ({
        –ª—ñ–≤–æ: this["‚û°Ô∏è"](x),
        –ø—Ä–∞–≤–æ: this["‚û°Ô∏è"](x),
        —Ü–µ–Ω—Ç—Ä: x
      });
    }
  }
};

// –ë–∞–≥–∞—Ç–æ–≤–∏–º—ñ—Ä–Ω—ñ –≥–ª—ñ—Ñ–∏ - —Ç–µ–Ω–∑–æ—Ä–∏
export interface –¢–µ–Ω–∑–æ—Ä–ì–ª—ñ—Ñ {
  –≤–∏–º—ñ—Ä–Ω—ñ—Å—Ç—å: number;
  —Ñ–æ—Ä–º–∞: number[];
  –¥–∞–Ω—ñ: any;
  –∑–≥–æ—Ä—Ç–∫–∞: (–≤—ñ—Å—å: number) => –¢–µ–Ω–∑–æ—Ä–ì–ª—ñ—Ñ;
}

// –ü—É–ª—å—Å—É—é—á–∏–π —Ñ—Ä–∞–∫—Ç–∞–ª - —Å–∞–º–æ–æ–±—á–∏—Å–ª—é–≤–∞–ª—å–Ω–∏–π
export class –ü—É–ª—å—Å—É—é—á–∏–π–ì–ª—ñ—Ñ {
  private —Ñ–∞–∑–∞ = 0;
  private —ñ—Å—Ç–æ—Ä—ñ—è: any[] = [];
  
  constructor(private –±–∞–∑–æ–≤–∏–π–ì–ª—ñ—Ñ: –ì–ª—ñ—Ñ) {}
  
  // –ö–æ–∂–µ–Ω –ø—É–ª—å—Å –ø–æ—Ä–æ–¥–∂—É—î –Ω–æ–≤–∏–π —Å—Ç–∞–Ω
  –ø—É–ª—å—Å(): –ì–ª—ñ—Ñ {
    this.—Ñ–∞–∑–∞++;
    
    // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –º–æ—Ä—Ñ—ñ–∑–º –¥–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ —Å—Ç–∞–Ω—É
    const –º–æ—Ä—Ñ—ñ–∑–º = this.–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏–ú–æ—Ä—Ñ—ñ–∑–º(this.—Ñ–∞–∑–∞);
    const –Ω–æ–≤–∏–π–°—Ç–∞–Ω = this.–∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏–ú–æ—Ä—Ñ—ñ–∑–º(
      –º–æ—Ä—Ñ—ñ–∑–º, 
      this.—ñ—Å—Ç–æ—Ä—ñ—è[this.—ñ—Å—Ç–æ—Ä—ñ—è.length - 1] || this.–±–∞–∑–æ–≤–∏–π–ì–ª—ñ—Ñ
    );
    
    this.—ñ—Å—Ç–æ—Ä—ñ—è.push(–Ω–æ–≤–∏–π–°—Ç–∞–Ω);
    
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ –æ—Å—Ç–∞–Ω–Ω—ñ N —Å—Ç–∞–Ω—ñ–≤ (–∑–Ω—ñ–º–æ–∫)
    if (this.—ñ—Å—Ç–æ—Ä—ñ—è.length > 10) {
      this.—ñ—Å—Ç–æ—Ä—ñ—è.shift();
    }
    
    return –Ω–æ–≤–∏–π–°—Ç–∞–Ω;
  }
  
  // –ì–µ–Ω–µ—Ä—É—î–º–æ –º–æ—Ä—Ñ—ñ–∑–º –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ñ–∞–∑–∏
  private –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏–ú–æ—Ä—Ñ—ñ–∑–º(—Ñ–∞–∑–∞: number): –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º {
    const –º–æ—Ä—Ñ—ñ–∑–º–∏ = [
      { "‚ÜóÔ∏è": "a", "‚ÜòÔ∏è": "b", "‚û°Ô∏è": (x: any) => ({ ...x, —Ñ–∞–∑–∞ }) },
      { "‚ÜóÔ∏è": "b", "‚ÜòÔ∏è": "c", "‚û°Ô∏è": (x: any) => Array.isArray(x) ? x : [x] },
      { "‚ÜóÔ∏è": "c", "‚ÜòÔ∏è": "a", "‚û°Ô∏è": (x: any) => x?.—Ñ–∞–∑–∞ || x }
    ];
    
    return –º–æ—Ä—Ñ—ñ–∑–º–∏[—Ñ–∞–∑–∞ % –º–æ—Ä—Ñ—ñ–∑–º–∏.length];
  }
  
  private –∑–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏–ú–æ—Ä—Ñ—ñ–∑–º(–º: –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º, –≥: –ì–ª—ñ—Ñ): –ì–ª—ñ—Ñ {
    if (typeof –≥ === "string") {
      return –º["‚û°Ô∏è"](–≥);
    }
    return –º;
  }
  
  // –ó–Ω—ñ–º–æ–∫ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Å—Ç–∞–Ω—É
  –∑–Ω—ñ–º–æ–∫(): any {
    return {
      —Ñ–∞–∑–∞: this.—Ñ–∞–∑–∞,
      –ø–æ—Ç–æ—á–Ω–∏–π: this.—ñ—Å—Ç–æ—Ä—ñ—è[this.—ñ—Å—Ç–æ—Ä—ñ—è.length - 1],
      —ñ—Å—Ç–æ—Ä—ñ—è: this.—ñ—Å—Ç–æ—Ä—ñ—è.slice(-3) // –æ—Å—Ç–∞–Ω–Ω—ñ 3 —Å—Ç–∞–Ω–∏
    };
  }
}

// –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ —á–µ—Ä–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
export class –ö–∞—Ç–µ–≥–æ—Ä—ñ–∞–ª—å–Ω—ñ–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ {
  private –≥—Ä–∞—Ñ = new Map<string, Set<string>>();
  private –º–æ—Ä—Ñ—ñ–∑–º–∏ = new Map<string, –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º>();
  
  // –î–æ–¥–∞—Ç–∏ –∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å —è–∫ –º–æ—Ä—Ñ—ñ–∑–º
  –¥–æ–¥–∞—Ç–∏(–≤—ñ–¥: string, –¥–æ: string, –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è?: (x: any) => any): void {
    if (!this.–≥—Ä–∞—Ñ.has(–≤—ñ–¥)) {
      this.–≥—Ä–∞—Ñ.set(–≤—ñ–¥, new Set());
    }
    this.–≥—Ä–∞—Ñ.get(–≤—ñ–¥)!.add(–¥–æ);
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ—Ä—Ñ—ñ–∑–º
    this.–º–æ—Ä—Ñ—ñ–∑–º–∏.set(`${–≤—ñ–¥}‚Üí${–¥–æ}`, {
      "‚ÜóÔ∏è": –≤—ñ–¥,
      "‚ÜòÔ∏è": –¥–æ,
      "‚û°Ô∏è": –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è || ((x: any) => x)
    });
  }
  
  // –û–±—á–∏—Å–ª–∏—Ç–∏ —à–ª—è—Ö —è–∫ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é –º–æ—Ä—Ñ—ñ–∑–º—ñ–≤
  –æ–±—á–∏—Å–ª–∏—Ç–∏–®–ª—è—Ö(–≤—ñ–¥: string, –¥–æ: string): –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º | null {
    if (–≤—ñ–¥ === –¥–æ) {
      return –ö–ê–¢–ï–ì–û–†–Ü–ê–õ–¨–ù–Ü_–ì–õ–Ü–§–ò["üÜî"] as –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º;
    }
    
    // BFS –¥–ª—è –ø–æ—à—É–∫—É —à–ª—è—Ö—É
    const —á–µ—Ä–≥–∞: Array<[string, –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º[]]> = [[–≤—ñ–¥, []]];
    const –≤—ñ–¥–≤—ñ–¥–∞–Ω—ñ = new Set<string>();
    
    while (—á–µ—Ä–≥–∞.length > 0) {
      const [–ø–æ—Ç–æ—á–Ω–∏–π, —à–ª—è—Ö] = —á–µ—Ä–≥–∞.shift()!;
      
      if (–≤—ñ–¥–≤—ñ–¥–∞–Ω—ñ.has(–ø–æ—Ç–æ—á–Ω–∏–π)) continue;
      –≤—ñ–¥–≤—ñ–¥–∞–Ω—ñ.add(–ø–æ—Ç–æ—á–Ω–∏–π);
      
      const —Å—É—Å—ñ–¥–∏ = this.–≥—Ä–∞—Ñ.get(–ø–æ—Ç–æ—á–Ω–∏–π) || new Set();
      
      for (const —Å—É—Å—ñ–¥ of —Å—É—Å—ñ–¥–∏) {
        const –º–æ—Ä—Ñ—ñ–∑–º = this.–º–æ—Ä—Ñ—ñ–∑–º–∏.get(`${–ø–æ—Ç–æ—á–Ω–∏–π}‚Üí${—Å—É—Å—ñ–¥}`);
        if (!–º–æ—Ä—Ñ—ñ–∑–º) continue;
        
        const –Ω–æ–≤–∏–π–®–ª—è—Ö = [...—à–ª—è—Ö, –º–æ—Ä—Ñ—ñ–∑–º];
        
        if (—Å—É—Å—ñ–¥ === –¥–æ) {
          // –ö–æ–º–ø–æ–∑—É—î–º–æ –≤—Å—ñ –º–æ—Ä—Ñ—ñ–∑–º–∏
          return this.–∫–æ–º–ø–æ–∑—É–≤–∞—Ç–∏(–Ω–æ–≤–∏–π–®–ª—è—Ö);
        }
        
        —á–µ—Ä–≥–∞.push([—Å—É—Å—ñ–¥, –Ω–æ–≤–∏–π–®–ª—è—Ö]);
      }
    }
    
    return null;
  }
  
  // –ö–æ–º–ø–æ–∑–∏—Ü—ñ—è –º–æ—Ä—Ñ—ñ–∑–º—ñ–≤
  private –∫–æ–º–ø–æ–∑—É–≤–∞—Ç–∏(–º–æ—Ä—Ñ—ñ–∑–º–∏: –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º[]): –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º {
    if (–º–æ—Ä—Ñ—ñ–∑–º–∏.length === 0) {
      return –ö–ê–¢–ï–ì–û–†–Ü–ê–õ–¨–ù–Ü_–ì–õ–Ü–§–ò["üÜî"] as –ì–ª—ñ—Ñ–ú–æ—Ä—Ñ—ñ–∑–º;
    }
    
    return –º–æ—Ä—Ñ—ñ–∑–º–∏.reduce((–∫–æ–º–ø–æ–∑–∏—Ü—ñ—è, –º–æ—Ä—Ñ—ñ–∑–º) => ({
      "‚ÜóÔ∏è": –º–æ—Ä—Ñ—ñ–∑–º–∏[0]["‚ÜóÔ∏è"],
      "‚ÜòÔ∏è": –º–æ—Ä—Ñ—ñ–∑–º["‚ÜòÔ∏è"],
      "‚û°Ô∏è": (x: any) => –º–æ—Ä—Ñ—ñ–∑–º["‚û°Ô∏è"](–∫–æ–º–ø–æ–∑–∏—Ü—ñ—è["‚û°Ô∏è"](x))
    }));
  }
}

// –°–∞–º–æ–æ–±—á–∏—Å–ª—é–≤–∞–ª—å–Ω—ñ –≥—Ä—É–ø–∏
export class –°–∞–º–æ–æ–±—á–∏—Å–ª—é–≤–∞–ª—å–Ω–∞–ì—Ä—É–ø–∞ {
  private –µ–ª–µ–º–µ–Ω—Ç–∏ = new Map<string, –ü—É–ª—å—Å—É—é—á–∏–π–ì–ª—ñ—Ñ>();
  
  –¥–æ–¥–∞—Ç–∏(—ñ–º'—è: string, –≥–ª—ñ—Ñ: –ì–ª—ñ—Ñ): void {
    this.–µ–ª–µ–º–µ–Ω—Ç–∏.set(—ñ–º'—è, new –ü—É–ª—å—Å—É—é—á–∏–π–ì–ª—ñ—Ñ(–≥–ª—ñ—Ñ));
  }
  
  // –û–¥–∏–Ω –∫—Ä–æ–∫ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –¥–ª—è –≤—Å—ñ—î—ó –≥—Ä—É–ø–∏
  –æ–±—á–∏—Å–ª–∏—Ç–∏(): Map<string, any> {
    const —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ = new Map<string, any>();
    
    // –ö–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç –ø—É–ª—å—Å—É—î
    for (const [—ñ–º'—è, –ø—É–ª—å—Å–∞—Ä] of this.–µ–ª–µ–º–µ–Ω—Ç–∏) {
      —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏.set(—ñ–º'—è, –ø—É–ª—å—Å–∞—Ä.–ø—É–ª—å—Å());
    }
    
    // –í–∑–∞—î–º–æ–¥—ñ—è –º—ñ–∂ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ (–µ–Ω—Ç–∞–Ω–≥–ª–º–µ–Ω—Ç)
    for (const [—ñ–º'—è1, —Ä–µ–∑1] of —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏) {
      for (const [—ñ–º'—è2, —Ä–µ–∑2] of —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏) {
        if (—ñ–º'—è1 !== —ñ–º'—è2) {
          // –†–µ–∑–æ–Ω–∞–Ω—Å –≤–ø–ª–∏–≤–∞—î –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –ø—É–ª—å—Å
          const —Ä–µ–∑–æ–Ω–∞–Ω—Å = this.–æ–±—á–∏—Å–ª–∏—Ç–∏–†–µ–∑–æ–Ω–∞–Ω—Å(—Ä–µ–∑1, —Ä–µ–∑2);
          if (—Ä–µ–∑–æ–Ω–∞–Ω—Å > 0.5) {
            this.–µ–ª–µ–º–µ–Ω—Ç–∏.get(—ñ–º'—è1)?.–ø—É–ª—å—Å();
          }
        }
      }
    }
    
    return —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏;
  }
  
  private –æ–±—á–∏—Å–ª–∏—Ç–∏–†–µ–∑–æ–Ω–∞–Ω—Å(–≥1: any, –≥2: any): number {
    // –ü—Ä–æ—Å—Ç–∏–π —Ä–µ–∑–æ–Ω–∞–Ω—Å —á–µ—Ä–µ–∑ —Ö–µ—à
    const —Ö1 = JSON.stringify(–≥1).length;
    const —Ö2 = JSON.stringify(–≥2).length;
    return Math.abs(—Ö1 - —Ö2) / Math.max(—Ö1, —Ö2);
  }
  
  // –ó–Ω—ñ–º–æ–∫ –≤—Å—ñ—î—ó –≥—Ä—É–ø–∏
  –∑–Ω—ñ–º–æ–∫(): any {
    const –∑–Ω—ñ–º–∫–∏: Record<string, any> = {};
    
    for (const [—ñ–º'—è, –ø—É–ª—å—Å–∞—Ä] of this.–µ–ª–µ–º–µ–Ω—Ç–∏) {
      –∑–Ω—ñ–º–∫–∏[—ñ–º'—è] = –ø—É–ª—å—Å–∞—Ä.–∑–Ω—ñ–º–æ–∫();
    }
    
    return –∑–Ω—ñ–º–∫–∏;
  }
}