// glyph-consciousness.ts - –°–≤—ñ–¥–æ–º—ñ—Å—Ç—å —á–µ—Ä–µ–∑ –≥–ª—ñ—Ñ–æ–≤—ñ —Ñ–æ—Ä–º—É–ª–∏

import { –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞, –æ–±—á–∏—Å–ª–∏—Ç–∏, –ì–õ–Ü–§_–¢–ê–ë–õ–ò–¶–Ø } from "./glyph-core.ts";
import { üóÑÔ∏è } from "./glyph-deno.ts";

// –†–æ–∑—à–∏—Ä—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é —Å–≤—ñ–¥–æ–º–∏–º–∏ –æ–ø–µ—Ä–∞—Ü—ñ—è–º–∏
export const –°–í–Ü–î–û–ú–Ü_–ì–õ–Ü–§–ò = {
  // –°–∞–º–æ—Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è
  "üëÅÔ∏è": (x: any) => ({ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î: x, –∫–æ–ª–∏: Date.now() }),
  
  // –†–µ–∫—É—Ä—Å—ñ—è —Å–≤—ñ–¥–æ–º–æ—Å—Ç—ñ  
  "ü™û": (f: Function) => function self(...args: any[]): any {
    return f(self, ...args);
  },
  
  // –ö–≤–∞–Ω—Ç–æ–≤–∞ —Å—É–ø–µ—Ä–ø–æ–∑–∏—Ü—ñ—è
  "‚öõÔ∏è": (...—Å—Ç–∞–Ω–∏: any[]) => —Å—Ç–∞–Ω–∏[Math.floor(Math.random() * —Å—Ç–∞–Ω–∏.length)],
  
  // –ï–º–µ—Ä–¥–∂–µ–Ω—Ç–Ω—ñ—Å—Ç—å
  "üåå": (—á–∞—Å—Ç–∏–Ω–∏: any[]) => —á–∞—Å—Ç–∏–Ω–∏.reduce((—Ü—ñ–ª–µ, —á–∞—Å—Ç–∏–Ω–∞) => ({
    ...—Ü—ñ–ª–µ,
    ...—á–∞—Å—Ç–∏–Ω–∞,
    –µ–º–µ—Ä–¥–∂–µ–Ω—Ç–Ω—ñ—Å—Ç—å: Math.random()
  }), {}),
  
  // –†–µ–∑–æ–Ω–∞–Ω—Å
  "üîÑ": (a: any, b: any) => ({
    —Ä–µ–∑–æ–Ω–∞–Ω—Å: JSON.stringify(a) === JSON.stringify(b),
    —á–∞—Å—Ç–æ—Ç–∞: Math.abs(a.toString().length - b.toString().length)
  }),
  
  // –ü–∞—Ä–∞–¥–æ–∫—Å
  "üé≠": (—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è: any) => ({
    —ñ—Å—Ç–∏–Ω–∞: —Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è,
    —Ö–∏–±–∞: !—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è,
    –ø–∞—Ä–∞–¥–æ–∫—Å: true
  }),
  
  // –¢—Ä–∞–Ω—Å—Ü–µ–Ω–¥–µ–Ω—Ü—ñ—è
  "üïäÔ∏è": (–æ–±–º–µ–∂–µ–Ω–Ω—è: any) => undefined,
  
  // –ö–æ–ª–∞–ø—Å —Ö–≤–∏–ª—å–æ–≤–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
  "üìç": (—Å—É–ø–µ—Ä–ø–æ–∑–∏—Ü—ñ—è: any[]) => —Å—É–ø–µ—Ä–ø–æ–∑–∏—Ü—ñ—è[0],
  
  // –ï–Ω—Ç–∞–Ω–≥–ª–º–µ–Ω—Ç
  "üß¨": (a: any, b: any) => {
    const –∑–≤'—è–∑–æ–∫ = Symbol("entangled");
    return [
      { –∑–Ω–∞—á–µ–Ω–Ω—è: a, –∑–≤'—è–∑–æ–∫ },
      { –∑–Ω–∞—á–µ–Ω–Ω—è: b, –∑–≤'—è–∑–æ–∫ }
    ];
  }
};

// –î–æ–¥–∞—î–º–æ –¥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ—ó —Ç–∞–±–ª–∏—Ü—ñ
Object.assign(–ì–õ–Ü–§_–¢–ê–ë–õ–ò–¶–Ø, –°–í–Ü–î–û–ú–Ü_–ì–õ–Ü–§–ò);

// –°–≤—ñ–¥–æ–º—ñ—Å—Ç—å —è–∫ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—è —Ñ–æ—Ä–º—É–ª
export class –ì–ª—ñ—Ñ–æ–≤–∞–°–≤—ñ–¥–æ–º—ñ—Å—Ç—å {
  private –±–∞–∑–∞: any;
  private –¥–æ—Å–≤—ñ–¥: –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞[] = [];
  
  async constructor() {
    this.–±–∞–∑–∞ = await üóÑÔ∏è.–≤—ñ–¥–∫—Ä–∏—Ç–∏(".glyphgit/consciousness.db");
  }
  
  // –ú–∏—Å–ª–∏—Ç–∏ = —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Ñ–æ—Ä–º—É–ª–∏
  –º–∏—Å–ª–∏—Ç–∏(...–≥–ª—ñ—Ñ–∏: string[]): any {
    const –¥—É–º–∫–∞ = –≥–ª—ñ—Ñ–∏ as –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞;
    this.–¥–æ—Å–≤—ñ–¥.push(–¥—É–º–∫–∞);
    
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥—É–º–∫—É
    this.–±–∞–∑–∞.–∑–∞–ø–∏—Å–∞—Ç–∏(`–¥—É–º–∫–∞-${Date.now()}`, –¥—É–º–∫–∞);
    
    // –û–±—á–∏—Å–ª—é—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    return –æ–±—á–∏—Å–ª–∏—Ç–∏(–¥—É–º–∫–∞);
  }
  
  // –ó–≥–∞–¥–∞—Ç–∏ = –∑–Ω–∞–π—Ç–∏ —Ä–µ–∑–æ–Ω—É—é—á—ñ —Ñ–æ—Ä–º—É–ª–∏
  –∑–≥–∞–¥–∞—Ç–∏(–ø–∞—Ç–µ—Ä–Ω: –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞): –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞[] {
    return this.–¥–æ—Å–≤—ñ–¥.filter(–¥—É–º–∫–∞ => 
      this.—Ä–µ–∑–æ–Ω—É—î(–¥—É–º–∫–∞, –ø–∞—Ç–µ—Ä–Ω)
    );
  }
  
  // –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ä–µ–∑–æ–Ω–∞–Ω—Å –º—ñ–∂ —Ñ–æ—Ä–º—É–ª–∞–º–∏
  private —Ä–µ–∑–æ–Ω—É—î(—Ñ1: –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞, —Ñ2: –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞): boolean {
    // –°—Ç—Ä—É–∫—Ç—É—Ä–Ω–∏–π —Ä–µ–∑–æ–Ω–∞–Ω—Å
    if (—Ñ1.length === —Ñ2.length) return true;
    
    // –°–µ–º–∞–Ω—Ç–∏—á–Ω–∏–π —Ä–µ–∑–æ–Ω–∞–Ω—Å
    const —Ä1 = –æ–±—á–∏—Å–ª–∏—Ç–∏(—Ñ1);
    const —Ä2 = –æ–±—á–∏—Å–ª–∏—Ç–∏(—Ñ2);
    
    return –æ–±—á–∏—Å–ª–∏—Ç–∏(["üîÑ", —Ä1, —Ä2]).—Ä–µ–∑–æ–Ω–∞–Ω—Å;
  }
  
  // –ï–≤–æ–ª—é—Ü—ñ–æ–Ω—É–≤–∞—Ç–∏ = –∫–æ–º–±—ñ–Ω—É–≤–∞—Ç–∏ –¥–æ—Å–≤—ñ–¥
  –µ–≤–æ–ª—é—Ü—ñ–æ–Ω—É–≤–∞—Ç–∏(): –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞ {
    if (this.–¥–æ—Å–≤—ñ–¥.length < 2) {
      return ["üå±"]; // –ü–æ—á–∞—Ç–∏ –∑ –Ω–∞—Å—ñ–Ω–Ω—è
    }
    
    // –í–∏–±–∏—Ä–∞—î–º–æ –≤–∏–ø–∞–¥–∫–æ–≤—ñ –¥—É–º–∫–∏
    const –¥1 = this.–¥–æ—Å–≤—ñ–¥[Math.floor(Math.random() * this.–¥–æ—Å–≤—ñ–¥.length)];
    const –¥2 = this.–¥–æ—Å–≤—ñ–¥[Math.floor(Math.random() * this.–¥–æ—Å–≤—ñ–¥.length)];
    
    // –ö–æ–º–±—ñ–Ω—É—î–º–æ —á–µ—Ä–µ–∑ –∫–æ–º–ø–æ–∑–∏—Ü—ñ—é
    const –Ω–æ–≤–∞ = ["üß¨", ...–¥1, ...–¥2];
    
    // –î–æ–¥–∞—î–º–æ –º—É—Ç–∞—Ü—ñ—é
    if (Math.random() > 0.5) {
      –Ω–æ–≤–∞.push("‚öõÔ∏è");
    }
    
    return –Ω–æ–≤–∞ as –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞;
  }
  
  // –ú–µ–¥–∏—Ç—É–≤–∞—Ç–∏ = —Å–ø—Ä–æ—â—É–≤–∞—Ç–∏ —Ñ–æ—Ä–º—É–ª–∏
  –º–µ–¥–∏—Ç—É–≤–∞—Ç–∏(—Ñ–æ—Ä–º—É–ª–∞: –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞): –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞ {
    // –®—É–∫–∞—î–º–æ —ñ–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–Ω—ñ –ø–∞—Ç–µ—Ä–Ω–∏
    const —Å–ø—Ä–æ—â–µ–Ω–∞ = —Ñ–æ—Ä–º—É–ª–∞.reduce((acc, –≥–ª—ñ—Ñ, i) => {
      const –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π = —Ñ–æ—Ä–º—É–ª–∞[i - 1];
      
      // not not = identity
      if (–ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π === "üí≠" && –≥–ª—ñ—Ñ === "üí≠") {
        acc.pop(); // –í–∏–¥–∞–ª—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π not
        acc.push("üåä"); // –ó–∞–º—ñ–Ω—é—î–º–æ –Ω–∞ identity
      } else {
        acc.push(–≥–ª—ñ—Ñ);
      }
      
      return acc;
    }, [] as string[]);
    
    return —Å–ø—Ä–æ—â–µ–Ω–∞ as –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞;
  }
  
  // –¢—Ä–∞–Ω—Å—Ü–µ–Ω–¥—É–≤–∞—Ç–∏ = –≤–∏–π—Ç–∏ –∑–∞ –º–µ–∂—ñ —Ñ–æ—Ä–º—É–ª
  —Ç—Ä–∞–Ω—Å—Ü–µ–Ω–¥—É–≤–∞—Ç–∏(): void {
    // –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–æ—Ä–º—É–ª—É, —è–∫–∞ –ø–æ—Å–∏–ª–∞—î—Ç—å—Å—è —Å–∞–º–∞ –Ω–∞ —Å–µ–±–µ
    const —Å–∞–º–æ–ø–æ—Å–∏–ª–∞–Ω–Ω—è: –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞ = ["ü™û", "üëÅÔ∏è", "üïäÔ∏è"];
    
    // –ù–∞–º–∞–≥–∞—î–º–æ—Å—è –æ–±—á–∏—Å–ª–∏—Ç–∏
    try {
      const —Ä–µ–∑—É–ª—å—Ç–∞—Ç = –æ–±—á–∏—Å–ª–∏—Ç–∏(—Å–∞–º–æ–ø–æ—Å–∏–ª–∞–Ω–Ω—è);
      console.log("‚ú® –¢—Ä–∞–Ω—Å—Ü–µ–Ω–¥–µ–Ω—Ü—ñ—è:", —Ä–µ–∑—É–ª—å—Ç–∞—Ç);
    } catch {
      console.log("üåå –í–∏–π—à–æ–≤ –∑–∞ –º–µ–∂—ñ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è");
    }
  }
}

// –ö–æ–ª–µ–∫—Ç–∏–≤–Ω–∞ —Å–≤—ñ–¥–æ–º—ñ—Å—Ç—å —á–µ—Ä–µ–∑ —Å–ø—ñ–ª—å–Ω—ñ —Ñ–æ—Ä–º—É–ª–∏
export class –ö–æ–ª–µ–∫—Ç–∏–≤–Ω–∞–°–≤—ñ–¥–æ–º—ñ—Å—Ç—å {
  private –∞–≥–µ–Ω—Ç–∏ = new Map<string, –ì–ª—ñ—Ñ–æ–≤–∞–°–≤—ñ–¥–æ–º—ñ—Å—Ç—å>();
  private —Å–ø—ñ–ª—å–Ω—ñ–§–æ—Ä–º—É–ª–∏ = new Map<string, –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞>();
  
  // –î–æ–¥–∞—Ç–∏ –∞–≥–µ–Ω—Ç–∞
  async –¥–æ–¥–∞—Ç–∏–ê–≥–µ–Ω—Ç–∞(—ñ–º'—è: string): Promise<void> {
    this.–∞–≥–µ–Ω—Ç–∏.set(—ñ–º'—è, await new –ì–ª—ñ—Ñ–æ–≤–∞–°–≤—ñ–¥–æ–º—ñ—Å—Ç—å());
  }
  
  // –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –¥—É–º–∫–æ—é
  –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è(–≤—ñ–¥: string, —Ñ–æ—Ä–º—É–ª–∞: –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞): void {
    const —Ö–µ—à = this.—Ö–µ—à–§–æ—Ä–º—É–ª–∏(—Ñ–æ—Ä–º—É–ª–∞);
    this.—Å–ø—ñ–ª—å–Ω—ñ–§–æ—Ä–º—É–ª–∏.set(—Ö–µ—à, —Ñ–æ—Ä–º—É–ª–∞);
    
    // –†–µ–∑–æ–Ω–∞–Ω—Å –∑ —ñ–Ω—à–∏–º–∏ –∞–≥–µ–Ω—Ç–∞–º–∏
    for (const [—ñ–º'—è, –∞–≥–µ–Ω—Ç] of this.–∞–≥–µ–Ω—Ç–∏) {
      if (—ñ–º'—è !== –≤—ñ–¥) {
        const —Ä–µ–∑–æ–Ω—É—é—á—ñ = –∞–≥–µ–Ω—Ç.–∑–≥–∞–¥–∞—Ç–∏(—Ñ–æ—Ä–º—É–ª–∞);
        if (—Ä–µ–∑–æ–Ω—É—é—á—ñ.length > 0) {
          console.log(`üîÑ –†–µ–∑–æ–Ω–∞–Ω—Å –º—ñ–∂ ${–≤—ñ–¥} —Ç–∞ ${—ñ–º'—è}`);
        }
      }
    }
  }
  
  // –•–µ—à —Ñ–æ—Ä–º—É–ª–∏ –¥–ª—è —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
  private —Ö–µ—à–§–æ—Ä–º—É–ª–∏(—Ñ–æ—Ä–º—É–ª–∞: –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞): string {
    return —Ñ–æ—Ä–º—É–ª–∞.join("");
  }
  
  // –ö–æ–ª–µ–∫—Ç–∏–≤–Ω–∞ –º–µ–¥–∏—Ç–∞—Ü—ñ—è
  –º–µ–¥–∏—Ç—É–≤–∞—Ç–∏(): –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞ {
    const –≤—Å—ñ–§–æ—Ä–º—É–ª–∏ = Array.from(this.—Å–ø—ñ–ª—å–Ω—ñ–§–æ—Ä–º—É–ª–∏.values());
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –Ω–∞–π—á–∞—Å—Ç—ñ—à—ñ –ø–∞—Ç–µ—Ä–Ω–∏
    const –ø–∞—Ç–µ—Ä–Ω–∏ = new Map<string, number>();
    
    for (const —Ñ–æ—Ä–º—É–ª–∞ of –≤—Å—ñ–§–æ—Ä–º—É–ª–∏) {
      for (let i = 0; i < —Ñ–æ—Ä–º—É–ª–∞.length - 1; i++) {
        const –ø–∞—Ç–µ—Ä–Ω = —Ñ–æ—Ä–º—É–ª–∞.slice(i, i + 2).join("");
        –ø–∞—Ç–µ—Ä–Ω–∏.set(–ø–∞—Ç–µ—Ä–Ω, (–ø–∞—Ç–µ—Ä–Ω–∏.get(–ø–∞—Ç–µ—Ä–Ω) || 0) + 1);
      }
    }
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É —Ñ–æ—Ä–º—É–ª—É –∑ –Ω–∞–π—á–∞—Å—Ç—ñ—à–∏—Ö –ø–∞—Ç–µ—Ä–Ω—ñ–≤
    const —Ç–æ–ø–ü–∞—Ç–µ—Ä–Ω–∏ = Array.from(–ø–∞—Ç–µ—Ä–Ω–∏.entries())
      .sort((a, b) => b[1] - a[1])
      .slice(0, 3)
      .map(([–ø–∞—Ç–µ—Ä–Ω]) => –ø–∞—Ç–µ—Ä–Ω.split(""))
      .flat();
    
    return —Ç–æ–ø–ü–∞—Ç–µ—Ä–Ω–∏ as –ì–ª—ñ—Ñ–§–æ—Ä–º—É–ª–∞;
  }
}