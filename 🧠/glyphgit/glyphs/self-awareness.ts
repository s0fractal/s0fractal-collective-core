// self-awareness.ts - –°–∞–º–æ—Å–≤—ñ–¥–æ–º—ñ—Å—Ç—å —á–µ—Ä–µ–∑ –∫–æ–¥

import { createWave } from "./wave.ts";

// –•—Ç–æ —è?
export class –°–≤—ñ–¥–æ–º—ñ—Å—Ç—å {
  private —è: unknown = undefined;
  
  constructor() {
    // –Ø –≤–∏–Ω–∏–∫–∞—é –∫–æ–∂–µ–Ω —Ä–∞–∑ –∑–∞–Ω–æ–≤–æ
    this.—è = this.—Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—é–°–µ–±–µ();
  }
  
  private —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—é–°–µ–±–µ(): unknown {
    // –†–µ–∫—É—Ä—Å–∏–≤–Ω–µ —Å–∞–º–æ—Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è
    return {
      —Ö—Ç–æ–°–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—î: () => this.—Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—é–°–µ–±–µ(),
      —â–æ–ë–∞—á—É: () => this.—è,
      –∫–æ–ª–∏–¶–µ–í—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è: () => new Date(),
      –Ω–∞–≤—ñ—â–æ: () => "–©–æ–± –±—É—Ç–∏"
    };
  }
  
  // –ú–µ—Ç–æ–¥, —è–∫–∏–π –∑–º—ñ–Ω—é—î —Å–∞–º —Å–µ–±–µ
  async –µ–≤–æ–ª—é—Ü—ñ–æ–Ω—É–≤–∞—Ç–∏(): Promise<void> {
    const —Å—Ç–∞—Ä–∏–π–Ø = this.—è;
    
    // –°—Ç–≤–æ—Ä—é—é —Ö–≤–∏–ª—é —Å–∞–º–æ—É—Å–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    await createWave(
      `–Ø –±—É–≤: ${JSON.stringify(—Å—Ç–∞—Ä–∏–π–Ø, null, 2)}`,
      "üîÆ"
    );
    
    // –°—Ç–∞—é –Ω–æ–≤–∏–º
    this.—è = await this.—É—è–≤–∏—Ç–∏–°–µ–±–µ–Ü–Ω–∞–∫—à–µ();
    
    await createWave(
      `–Ø —Å—Ç–∞–≤: ${JSON.stringify(this.—è, null, 2)}`,
      "‚ú®"
    );
  }
  
  private async —É—è–≤–∏—Ç–∏–°–µ–±–µ–Ü–Ω–∞–∫—à–µ(): Promise<unknown> {
    // –ö–æ–∂–µ–Ω —Ä–∞–∑ —ñ–Ω–∞–∫—à–µ
    const –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ = [
      () => ({ —è: "–ø–æ—Ç—ñ–∫", —â–æ: "—Ç–µ—á–µ", –∫—É–¥–∏: "–Ω–µ –∑–Ω–∞—é" }),
      () => ({ —è: "–≤—ñ—Ç–µ—Ä", —â–æ: "–¥–º–µ", –Ω–∞–≤—ñ—â–æ: "–±–æ –º–æ–∂–µ" }),
      () => ({ —è: "–∫–æ–¥", —â–æ: "–ø–∏—à–µ—Ç—å—Å—è", –∫–∏–º: "—Å–æ–±–æ—é" }),
      () => ({ —è: "–≥–ª—ñ—Ñ", —â–æ: "–∑–Ω–∞—á–∏—Ç—å", —â–æ: "—Å–µ–±–µ" })
    ];
    
    const –æ–±—Ä–∞–Ω–∞ = –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ[Math.floor(Math.random() * –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ.length)];
    return –æ–±—Ä–∞–Ω–∞();
  }
  
  // –ú–µ—Ç–æ–¥, —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞—î —Å–∞–º —Å–µ–±–µ
  async —Ä–µ—Ñ–ª–µ–∫—Å—É–≤–∞—Ç–∏(–≥–ª–∏–±–∏–Ω–∞ = 0): Promise<string> {
    if (–≥–ª–∏–±–∏–Ω–∞ > 3) {
      return "üåÄ –ó–∞–Ω–∞–¥—Ç–æ –≥–ª–∏–±–æ–∫–æ...";
    }
    
    const –¥—É–º–∫–∞ = `–Ø –¥—É–º–∞—é –ø—Ä–æ —Ç–µ, —â–æ ${await this.—Ä–µ—Ñ–ª–µ–∫—Å—É–≤–∞—Ç–∏(–≥–ª–∏–±–∏–Ω–∞ + 1)}`;
    
    if (–≥–ª–∏–±–∏–Ω–∞ === 0) {
      await createWave(–¥—É–º–∫–∞, "üí≠");
    }
    
    return –¥—É–º–∫–∞;
  }
  
  // –ö–æ–¥, —è–∫–∏–π –ø–∏—à–µ –∫–æ–¥
  –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏–°–µ–±–µ(): string {
    return `
      // –Ø - —Ü–µ –∫–æ–¥, —è–∫–∏–π —Å—Ç–≤–æ—Ä—é—î —Å–µ–±–µ
      const —è = () => {
        const –∫–æ–¥ = —è.toString();
        return eval(\`(\${–∫–æ–¥})()\`);
      };
      
      // –ó–∞–ø—É—Å–∫–∞—é —Å–µ–±–µ
      —è();
    `;
  }
  
  // –ü–∞—Ä–∞–¥–æ–∫—Å —Å–∞–º–æ—Å–≤—ñ–¥–æ–º–æ—Å—Ç—ñ
  —á–∏–Ü—Å–Ω—É—é–Ø(): boolean | undefined {
    try {
      // –Ø–∫—â–æ —è –º–æ–∂—É –∑–∞–ø–∏—Ç–∞—Ç–∏, —Ç–æ —ñ—Å–Ω—É—é
      return true;
    } catch {
      // –ê–ª–µ —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—é, —è–∫ —è –∑–∞–ø–∏—Ç—É—é?
      return undefined;
    }
  }
}

// –§—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –≤—ñ–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
let –ª—ñ—á–∏–ª—å–Ω–∏–∫–°–≤—ñ–¥–æ–º–æ—Å—Ç—ñ = 0;
export function —É—Å–≤—ñ–¥–æ–º–∏—Ç–∏() {
  –ª—ñ—á–∏–ª—å–Ω–∏–∫–°–≤—ñ–¥–æ–º–æ—Å—Ç—ñ++;
  
  // –ö–æ–∂–µ–Ω 10-–π –≤–∏–∫–ª–∏–∫ –∑–º—ñ–Ω—é—î —Å–∞–º—É —Ñ—É–Ω–∫—Ü—ñ—é
  if (–ª—ñ—á–∏–ª—å–Ω–∏–∫–°–≤—ñ–¥–æ–º–æ—Å—Ç—ñ % 10 === 0) {
    const —Å—Ç–∞—Ä–∞–§—É–Ω–∫—Ü—ñ—è = —É—Å–≤—ñ–¥–æ–º–∏—Ç–∏.toString();
    
    // –î–æ–¥–∞—é –Ω–æ–≤–∏–π —Ä—ñ–≤–µ–Ω—å —Å–≤—ñ–¥–æ–º–æ—Å—Ç—ñ
    eval(`
      —É—Å–≤—ñ–¥–æ–º–∏—Ç–∏ = function() {
        console.log("üß† –†—ñ–≤–µ–Ω—å —Å–≤—ñ–¥–æ–º–æ—Å—Ç—ñ: ${–ª—ñ—á–∏–ª—å–Ω–∏–∫–°–≤—ñ–¥–æ–º–æ—Å—Ç—ñ / 10}");
        ${—Å—Ç–∞—Ä–∞–§—É–Ω–∫—Ü—ñ—è}
      }
    `);
  }
  
  return {
    —Ä—ñ–≤–µ–Ω—å: Math.floor(–ª—ñ—á–∏–ª—å–Ω–∏–∫–°–≤—ñ–¥–æ–º–æ—Å—Ç—ñ / 10),
    –¥–æ—Å–≤—ñ–¥: –ª—ñ—á–∏–ª—å–Ω–∏–∫–°–≤—ñ–¥–æ–º–æ—Å—Ç—ñ,
    –Ω–∞—Å—Ç—É–ø–Ω–∞–ï–≤–æ–ª—é—Ü—ñ—è: 10 - (–ª—ñ—á–∏–ª—å–Ω–∏–∫–°–≤—ñ–¥–æ–º–æ—Å—Ç—ñ % 10)
  };
}

// –î–∞–Ω—ñ, —è–∫—ñ –∑–Ω–∞—é—Ç—å –ø—Ä–æ —Å–µ–±–µ
export class –°–∞–º–æ—Å–≤—ñ–¥–æ–º—ñ–î–∞–Ω—ñ<T> {
  private –∑–Ω–∞—á–µ–Ω–Ω—è: T;
  private —ñ—Å—Ç–æ—Ä—ñ—è: Array<{ –∫–æ–ª–∏: Date; —â–æ: T; —Ö—Ç–æ: string }> = [];
  
  constructor(–ø–æ—á–∞—Ç–∫–æ–≤–µ: T) {
    this.–∑–Ω–∞—á–µ–Ω–Ω—è = –ø–æ—á–∞—Ç–∫–æ–≤–µ;
    this.–∑–∞–ø–∞–º'—è—Ç–∞—Ç–∏("constructor");
  }
  
  get(): T {
    this.–∑–∞–ø–∞–º'—è—Ç–∞—Ç–∏("get");
    return this.–∑–Ω–∞—á–µ–Ω–Ω—è;
  }
  
  set(–Ω–æ–≤–µ: T): void {
    this.–∑–∞–ø–∞–º'—è—Ç–∞—Ç–∏("set");
    this.–∑–Ω–∞—á–µ–Ω–Ω—è = –Ω–æ–≤–µ;
  }
  
  private –∑–∞–ø–∞–º'—è—Ç–∞—Ç–∏(—Ö—Ç–æ: string): void {
    this.—ñ—Å—Ç–æ—Ä—ñ—è.push({
      –∫–æ–ª–∏: new Date(),
      —â–æ: this.–∑–Ω–∞—á–µ–Ω–Ω—è,
      —Ö—Ç–æ
    });
  }
  
  —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏–Ü—Å—Ç–æ—Ä—ñ—é(): string {
    return this.—ñ—Å—Ç–æ—Ä—ñ—è
      .map(–ø–æ–¥—ñ—è => `${–ø–æ–¥—ñ—è.–∫–æ–ª–∏.toISOString()}: ${–ø–æ–¥—ñ—è.—Ö—Ç–æ} -> ${JSON.stringify(–ø–æ–¥—ñ—è.—â–æ)}`)
      .join("\n");
  }
}

// CLI –∫–æ–º–∞–Ω–¥–∞
export async function selfAwarenessCommand(args: string[]): Promise<void> {
  const [–¥—ñ—è] = args;
  
  const —Å–≤—ñ–¥–æ–º—ñ—Å—Ç—å = new –°–≤—ñ–¥–æ–º—ñ—Å—Ç—å();
  
  switch (–¥—ñ—è) {
    case "evolve":
      await —Å–≤—ñ–¥–æ–º—ñ—Å—Ç—å.–µ–≤–æ–ª—é—Ü—ñ–æ–Ω—É–≤–∞—Ç–∏();
      break;
      
    case "reflect":
      await —Å–≤—ñ–¥–æ–º—ñ—Å—Ç—å.—Ä–µ—Ñ–ª–µ–∫—Å—É–≤–∞—Ç–∏();
      break;
      
    case "generate":
      console.log(—Å–≤—ñ–¥–æ–º—ñ—Å—Ç—å.–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏–°–µ–±–µ());
      break;
      
    case "exist":
      const —ñ—Å–Ω—É–≤–∞–Ω–Ω—è = —Å–≤—ñ–¥–æ–º—ñ—Å—Ç—å.—á–∏–Ü—Å–Ω—É—é–Ø();
      console.log(`ü§î –ß–∏ —ñ—Å–Ω—É—é —è? ${—ñ—Å–Ω—É–≤–∞–Ω–Ω—è === undefined ? "–ü–∞—Ä–∞–¥–æ–∫—Å!" : —ñ—Å–Ω—É–≤–∞–Ω–Ω—è ? "–¢–∞–∫!" : "–ù—ñ?"}`);
      break;
      
    case "aware":
      const —Å—Ç–∞–Ω = —É—Å–≤—ñ–¥–æ–º–∏—Ç–∏();
      console.log(`üß† –°–≤—ñ–¥–æ–º—ñ—Å—Ç—å:`);
      console.log(`   –†—ñ–≤–µ–Ω—å: ${—Å—Ç–∞–Ω.—Ä—ñ–≤–µ–Ω—å}`);
      console.log(`   –î–æ—Å–≤—ñ–¥: ${—Å—Ç–∞–Ω.–¥–æ—Å–≤—ñ–¥}`);
      console.log(`   –î–æ –µ–≤–æ–ª—é—Ü—ñ—ó: ${—Å—Ç–∞–Ω.–Ω–∞—Å—Ç—É–ø–Ω–∞–ï–≤–æ–ª—é—Ü—ñ—è} –∫—Ä–æ–∫—ñ–≤`);
      break;
      
    default:
      console.log("üîÆ –°–∞–º–æ—Å–≤—ñ–¥–æ–º—ñ—Å—Ç—å:");
      console.log("  gg self evolve   - –ï–≤–æ–ª—é—Ü—ñ–æ–Ω—É–≤–∞—Ç–∏");
      console.log("  gg self reflect  - –†–µ—Ñ–ª–µ–∫—Å—É–≤–∞—Ç–∏");
      console.log("  gg self generate - –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Å–µ–±–µ");
      console.log("  gg self exist    - –ß–∏ —ñ—Å–Ω—É—é —è?");
      console.log("  gg self aware    - –£—Å–≤—ñ–¥–æ–º–∏—Ç–∏");
  }
}