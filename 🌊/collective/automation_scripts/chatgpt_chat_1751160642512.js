
#!/usr/bin/env node
/**
 * ü§ñ Auto-generated Browser Automation Script
 * Service: ChatGPT
 * Task: chat
 * Generated: 2025-06-29T01:30:42.507Z
 */

const puppeteer = require('puppeteer');

async function automate() {
  console.log('üåê –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—é –¥–ª—è ChatGPT...');
  
  const browser = await puppeteer.launch({ 
    headless: false,
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  });
  
  const page = await browser.newPage();
  await page.setViewport({ width: 1280, height: 720 });
  
  try {
    // –ù–∞–≤—ñ–≥–∞—Ü—ñ—è
    await page.goto('https://chat.openai.com/auth/login', { waitUntil: 'networkidle0' });
    console.log('‚úÖ –°—Ç–æ—Ä—ñ–Ω–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞');
    

    // –ß–∞—Ç –≤–∑–∞—î–º–æ–¥—ñ—è
    await page.waitForSelector('#prompt-textarea', { timeout: 10000 });
    
    const message = '–ü—Ä–∏–≤—ñ—Ç! –Ø —Ç–µ—Å—Ç—É—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—é –∑ s0fractal –∫–æ–ª–µ–∫—Ç–∏–≤—É.';
    await page.type('#prompt-textarea', message);
    
    await page.click('button[data-testid='send-button']');
    console.log('üí¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ');
    
    // –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
    await page.waitForSelector('.markdown', { timeout: 30000 });
    
    const response = await page.evaluate(() => {
      const responseEl = document.querySelector('.markdown');
      return responseEl ? responseEl.textContent : '–í—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞';
    });
    
    console.log('ü§ñ –í—ñ–¥–ø–æ–≤—ñ–¥—å –æ—Ç—Ä–∏–º–∞–Ω–∞:', response);
    
    // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É
    const result = {
      timestamp: new Date().toISOString(),
      service: 'chatgpt',
      message: message,
      response: response,
      success: true
    };
    
    require('fs').writeFileSync(
      './collective/shared/chatgpt_chat_log.json', 
      JSON.stringify(result, null, 2)
    );

  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—ó:', error.message);
  } finally {
    await browser.close();
    console.log('üîö –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä–∏—Ç–æ');
  }
}

automate().catch(console.error);
